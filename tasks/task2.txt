Main Goal:
#### Build the Asynchronous Search Function

1. **Accept a Query:** Create an `async function` that takes the user's text query string as input.
    
2. **Encode the Query:** Inside the function, `await` the result of running the user's query through the same model pipeline to get its embedding.
    
3. **Calculate Similarity:** Use your math library (like `ml-distance`) to calculate the cosine similarity between the query embedding and every file embedding stored in your array.
    
4. **Rank and Return:** Combine the similarity scores with the file metadata, sort the list from highest to lowest score, and return the top results.